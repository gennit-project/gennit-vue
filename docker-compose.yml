# In order to get the app and the database to communicate with each other, you have to setup static IP addresses on each container. Then, when registering Neo4j with hapi in hapiâ€™s `server.js` file, you reference the static IP that you set for Neo4j in this file.

version: "3.7"

secrets:
  google_maps_api_key:
    external: true
  graphql_url:
    external: true
  auth0_client_id:
    external: true
  auth0_domain:
    external: true

services:
  gennit-vue:
    depends_on:
      - "gennit-backend"
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '5173:5173'
    secrets:
      - google_maps_api_key
      - graphql_url
      - auth0_client_id
      - auth0_domain
    command: bash -c "npm install && npm run dev"
    environment:
      - VITE_GOOGLE_MAPS_API_KEY_FILE=/run/secrets/db_user
      - VITE_GRAPHQL_URL_FILE=/run/secrets/graphql/url
      - VITE_CLIENT_ID_FILE=/run/secrets/auth0_client_id
      - VITE_DOMAIN_FILE=/run/secrets/auth0_domain

  gennit-backend:
    build:
      context: ../gennit-backend
      dockerfile: Dockerfile.dev
    ports:
      - 4000:4000
      - 4001:4001
    networks:
      app_net:
        ipv4_address: 172.28.1.1
    depends_on:
      - dev-neo4j
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=myfears
      - NEO4J_ENCRYPTED=false

  dev-neo4j:
    image: bitnami/neo4j:3.5.3
    ports:
      - "7474:7474"
      - "7473:7473"
      - "7687:7687"
    volumes:
      - type: volume
        source: neo4j_data_dev
        target: /bitnami
    networks:
      app_net:
        ipv4_address: 172.28.1.2

volumes:
  neo4j_data_dev:
    driver: local

networks:
  app_net:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16